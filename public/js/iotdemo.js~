var getDeviceData = function(url) {
  return new Promise(function(resolve, reject) {
    var xhr = new XMLHttpRequest();
    
    xhr.open('get', url, true);
    //xhr.setRequestHeader("Access-Control-Allow-Credentials","true");
    xhr.setRequestHeader("Authorization","Basic " + btoa("a:mz41u:5oxdzprj4j:*b1En?Tla72Bs@XvXz"));
    //xhr.setRequestHeader("Authorization","Basic YTptejQxdTo1b3hkenByajRqOipiMUVuP1RsYTcyQnNAWHZYeg==");
    //xhr.withCredentials=true;
    xhr.responseType = 'json';
    xhr.onload = function() {
      var status = xhr.status;
      console.log(xhr.getAllResponseHeaders());
      if (status == 200) {
	resolve(xhr.response);
      } 
      else {
	reject(status);
      }
    };
    xhr.onerror = function (e) {
        console.log("error:\n" + xhr.getAllResponseHeaders());
    };
    xhr.send();
  });
};



function initialize() {



	var mapOptions = {
	  center: new google.maps.LatLng(42.358431,-71.059773),
	  zoom: 10
	};
	var map = new google.maps.Map(document.getElementById("map-canvas"),
	    mapOptions);

	//get the devices for this org
	var encoded = btoa("a:mz41u:5oxdzprj4j:*b1En?Tla72Bs@XvXz");
	console.log("encoded: " + encoded);

	getDeviceData("https://internetofthings.ibmcloud.com/api/v0001/organizations/mz41u/devices").then(function(data) {
	//getDeviceData("https://internetofthings.ibmcloud.com/api/v0001/historian/mz41u").then(function(data) {

		console.log("getJSON done");


		//for(var i = 0;i<10;i++)
		var applianceMarkers = new Array();
		/*var image = 'images/whirlpool.jpg';
		var image = {
		  url: 'images/whirlpool.jpg',
		  size: new google.maps.Size(200, 200),
		  origin: new google.maps.Point(0, 0),
		  anchor: new google.maps.Point(17, 34),
		  scaledSize: new google.maps.Size(75, 75)
		};*/
		var info = new Array();
		var infoWindows = new Array();
		for(var i = 0;i<data.length;i++)

		{
	
			console.log(data[i].type + ':  ' + data[i].metadata.location.lat);
			info[i]= JSON.stringify(data[i]); 
			infoWindows[i]=	new google.maps.InfoWindow({
			      content: generateInfoWindowContent(data[i])
			  });
			image2 = {
			  url: 'images/' + data[i].type + '.jpg',
			  size: new google.maps.Size(375, 412),
			  origin: new google.maps.Point(0, 0),
			  anchor: new google.maps.Point(17, 34),
			  scaledSize: new google.maps.Size(38, 42)
			};
			applianceMarkers[i] = new google.maps.Marker({
			    position: new google.maps.LatLng(data[i].metadata.location.lat,data[i].metadata.location.lon),
			    map: map,
			    title: data[i].id,
			    icon: image2,
			    infowindow: infoWindows[i]
			});

			google.maps.event.addListener(applianceMarkers[i], 'click', function() {
				this.infowindow.open(map, this);

			});


		}

		
		console.log("data: " + JSON.stringify(data));
	  
	}, function(status) {

	  alert('Something went wrong: ' + status);
	  
	});
}

function generateInfoWindowContent(data)
{
	var content = '<div id="content">';	
	content += '<div>Name: ' + data.id  + '</div>';
	content += '<div>Model: ' + data.type + '</div>';
	content += '<div>Registered: ' + data.registration.date  + '</div>';
	content += '<div><a href="#" onclick="window.open(\'/historian?device=' + data.uuid + '\')">View Historical Data</a></div>';
	content += '</div>';
	return content;

}


google.maps.event.addDomListener(window, 'load', initialize);
